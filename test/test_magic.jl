@testset "slide rank" begin
    occ = [0,0,0,0,0,0,0,0,
           0,0,0,0,0,0,0,0,
           0,0,0,0,0,0,0,0,
           0,0,0,0,0,0,0,0,
           0,0,0,0,0,0,0,0,
           0,0,0,0,0,0,0,0,
           0,0,0,0,0,0,0,0,
           0,0,1,0,0,1,0,0]

    att = [0,0,0,0,0,0,0,0,
           0,0,0,0,0,0,0,0,
           0,0,0,0,0,0,0,0,
           0,0,0,0,0,0,0,0,
           0,0,0,0,0,0,0,0,
           0,0,0,0,0,0,0,0,
           0,0,0,0,0,0,0,0,
           0,0,0,0,1,0,0,0]

    edg = [0,0,0,0,0,0,0,0,
           0,0,0,0,0,0,0,0,
           0,0,0,0,0,0,0,0,
           0,0,0,0,0,0,0,0,
           0,0,0,0,0,0,0,0,
           0,0,0,0,0,0,0,0,
           0,0,0,0,0,0,0,0,
           0,0,1,0,0,1,0,0]
    occ_uint = Bobby.cvt_to_uint(BitArray(occ))
    ui = Bobby.INT2UINT[60]
    m, e = Bobby.slide_rank(occ_uint, ui, Bobby.RANK_SHIFTS[1])
    @test all(Int.(Bobby.cvt_to_bitarray(m)) .== att)
    @test all(Int.(Bobby.cvt_to_bitarray(e)) .== edg)

    occ = [0,0,0,0,0,0,0,0,
           0,0,0,0,0,0,0,0,
           0,0,0,0,0,0,0,0,
           0,0,0,0,0,0,0,0,
           0,0,0,0,0,0,0,0,
           0,0,0,0,0,0,0,0,
           0,0,1,0,0,1,0,0,
           0,0,0,0,0,0,0,0]

    att = [0,0,0,0,0,0,0,0,
           0,0,0,0,0,0,0,0,
           0,0,0,0,0,0,0,0,
           0,0,0,0,0,0,0,0,
           0,0,0,0,0,0,0,0,
           0,0,0,0,0,0,0,0,
           0,0,0,0,1,0,0,0,
           0,0,0,0,0,0,0,0]

    edg = [0,0,0,0,0,0,0,0,
           0,0,0,0,0,0,0,0,
           0,0,0,0,0,0,0,0,
           0,0,0,0,0,0,0,0,
           0,0,0,0,0,0,0,0,
           0,0,0,0,0,0,0,0,
           0,0,1,0,0,1,0,0,
           0,0,0,0,0,0,0,0]
    occ_uint = Bobby.cvt_to_uint(BitArray(occ))
    ui = Bobby.INT2UINT[52]
    m, e = Bobby.slide_rank(occ_uint, ui, Bobby.RANK_SHIFTS[2])
    @test all(Int.(Bobby.cvt_to_bitarray(m)) .== att)
    @test all(Int.(Bobby.cvt_to_bitarray(e)) .== edg)

    occ = [0,0,0,0,0,0,0,0,
           0,0,0,0,0,0,0,0,
           0,0,0,0,0,0,0,0,
           0,0,0,0,0,0,0,0,
           0,0,0,0,0,0,0,0,
           0,0,0,0,0,0,0,0,
           0,0,1,0,0,1,0,0,
           0,0,0,0,0,0,0,0]

    att = [0,0,0,0,0,0,0,0,
           0,0,0,0,0,0,0,0,
           0,0,0,0,0,0,0,0,
           0,0,0,0,0,0,0,0,
           0,0,0,0,0,0,0,0,
           0,0,0,0,0,0,0,0,
           0,0,0,0,0,0,0,0,
           0,0,0,0,0,0,0,0]

    edg = [0,0,0,0,0,0,0,0,
           0,0,0,0,0,0,0,0,
           0,0,0,0,0,0,0,0,
           0,0,0,0,0,0,0,0,
           0,0,0,0,0,0,0,0,
           0,0,0,0,0,0,0,0,
           1,0,1,0,0,0,0,0,
           0,0,0,0,0,0,0,0]
    occ_uint = Bobby.cvt_to_uint(BitArray(occ))
    ui = Bobby.INT2UINT[50]
    m, e = Bobby.slide_rank(occ_uint, ui, Bobby.RANK_SHIFTS[2])
    @test all(Int.(Bobby.cvt_to_bitarray(m)) .== att)
    @test all(Int.(Bobby.cvt_to_bitarray(e)) .== edg)

    occ = [0,0,0,0,0,0,0,0,
           0,0,0,0,0,0,0,0,
           0,0,0,0,0,0,0,0,
           0,0,0,0,0,0,0,0,
           0,0,0,0,0,0,0,0,
           0,0,0,0,0,0,0,0,
           0,0,1,0,0,0,0,0,
           0,0,0,0,0,0,0,0]

    att = [0,0,0,0,0,0,0,0,
           0,0,0,0,0,0,0,0,
           0,0,0,0,0,0,0,0,
           0,0,0,0,0,0,0,0,
           0,0,0,0,0,0,0,0,
           0,0,0,0,0,0,0,0,
           0,0,0,1,1,1,1,0,
           0,0,0,0,0,0,0,0]

    edg = [0,0,0,0,0,0,0,0,
           0,0,0,0,0,0,0,0,
           0,0,0,0,0,0,0,0,
           0,0,0,0,0,0,0,0,
           0,0,0,0,0,0,0,0,
           0,0,0,0,0,0,0,0,
           0,0,1,0,0,0,0,0,
           0,0,0,0,0,0,0,0]
    occ_uint = Bobby.cvt_to_uint(BitArray(occ))
    ui = Bobby.INT2UINT[56]
    m, e = Bobby.rank_attack(occ_uint, ui)
    @test all(Int.(Bobby.cvt_to_bitarray(m)) .== att)
    @test all(Int.(Bobby.cvt_to_bitarray(e)) .== edg)

    occ = [0,0,0,0,0,0,0,0,
           0,0,0,0,0,0,0,0,
           0,0,0,1,0,0,0,0,
           0,0,0,0,1,0,0,0,
           0,0,0,0,0,1,0,0,
           0,0,0,1,0,0,0,0,
           0,0,1,0,0,0,0,0,
           0,0,0,0,1,0,0,0]

    att = [0,0,0,0,0,0,0,0,
           0,0,0,0,0,0,0,0,
           0,0,0,0,0,0,0,0,
           0,0,0,0,0,0,0,0,
           0,0,0,0,0,0,0,0,
           0,0,0,0,0,0,0,0,
           0,0,0,1,1,1,1,0,
           0,0,0,0,0,0,0,0]

    edg = [0,0,0,0,0,0,0,0,
           0,0,0,0,0,0,0,0,
           0,0,0,0,0,0,0,0,
           0,0,0,0,0,0,0,0,
           0,0,0,0,0,0,0,0,
           0,0,0,0,0,0,0,0,
           0,0,1,0,0,0,0,0,
           0,0,0,0,0,0,0,0]
    occ_uint = Bobby.cvt_to_uint(BitArray(occ))
    ui = Bobby.INT2UINT[56]
    m, e = Bobby.rank_attack(occ_uint, ui)
    @test all(Int.(Bobby.cvt_to_bitarray(m)) .== att)
    @test all(Int.(Bobby.cvt_to_bitarray(e)) .== edg)

    m, e = Bobby.file_attack(occ_uint, ui)
    att = [0,0,0,0,0,0,0,0,
           0,0,0,0,0,0,0,1,
           0,0,0,0,0,0,0,1,
           0,0,0,0,0,0,0,1,
           0,0,0,0,0,0,0,1,
           0,0,0,0,0,0,0,1,
           0,0,0,0,0,0,0,0,
           0,0,0,0,0,0,0,0]

    edg = [0,0,0,0,0,0,0,1,
           0,0,0,0,0,0,0,0,
           0,0,0,0,0,0,0,0,
           0,0,0,0,0,0,0,0,
           0,0,0,0,0,0,0,0,
           0,0,0,0,0,0,0,0,
           0,0,0,0,0,0,0,0,
           0,0,0,0,0,0,0,1]
    @test all(Int.(Bobby.cvt_to_bitarray(m)) .== att)
    @test all(Int.(Bobby.cvt_to_bitarray(e)) .== edg)

    occ = [0,0,0,0,0,0,0,0,
           0,0,0,0,0,0,0,0,
           0,0,0,1,0,0,0,0,
           0,0,0,0,1,0,0,0,
           0,0,0,0,0,1,0,0,
           0,0,0,1,0,0,0,0,
           0,0,1,0,0,0,0,0,
           0,0,0,0,1,0,0,0]

    att = [0,0,0,0,0,0,0,0,
           0,0,0,0,0,0,0,0,
           0,0,0,0,0,0,0,0,
           0,0,0,0,0,0,0,0,
           0,0,0,0,0,0,0,0,
           0,0,0,0,1,0,0,0,
           0,0,0,0,1,0,0,0,
           0,0,0,0,0,0,0,0]

    edg = [0,0,0,0,0,0,0,0,
           0,0,0,0,0,0,0,0,
           0,0,0,0,0,0,0,0,
           0,0,0,0,1,0,0,0,
           0,0,0,0,0,0,0,0,
           0,0,0,0,0,0,0,0,
           0,0,0,0,0,0,0,0,
           0,0,0,0,1,0,0,0]
    occ_uint = Bobby.cvt_to_uint(BitArray(occ))
    ui = Bobby.INT2UINT[37]
    m, e = Bobby.file_attack(occ_uint, ui)
    @test all(Int.(Bobby.cvt_to_bitarray(m)) .== att)
    @test all(Int.(Bobby.cvt_to_bitarray(e)) .== edg)

    occ = [0,1,0,0,0,0,0,0,
           0,0,0,0,0,1,0,0,
           0,1,0,0,0,1,0,0,
           0,0,0,1,0,0,0,0,
           0,0,0,0,1,0,0,0,
           0,0,0,1,0,0,0,0,
           0,0,0,0,0,1,0,0,
           0,1,0,0,0,0,1,0]

    att = [0,0,0,0,0,0,0,0,
           0,0,1,0,0,0,0,0,
           0,0,1,0,0,0,0,0,
           0,0,1,0,0,0,0,0,
           0,1,0,1,0,0,0,0,
           0,0,1,0,0,0,0,0,
           0,0,1,0,0,0,0,0,
           0,0,0,0,0,0,0,0]

    edg = [0,0,1,0,0,0,0,0,
           0,0,0,0,0,0,0,0,
           0,0,0,0,0,0,0,0,
           0,0,0,0,0,0,0,0,
           1,0,0,0,1,0,0,0,
           0,0,0,0,0,0,0,0,
           0,0,0,0,0,0,0,0,
           0,0,1,0,0,0,0,0]
    occ_uint = Bobby.cvt_to_uint(BitArray(occ))
    ui = Bobby.INT2UINT[35]
    m, e = Bobby.orthogonal_attack(occ_uint, ui)
    @test all(Int.(Bobby.cvt_to_bitarray(m)) .== att)
    @test all(Int.(Bobby.cvt_to_bitarray(e)) .== edg)

    occ = [0,0,0,0,0,0,0,0,
           0,1,0,0,0,0,0,0,
           0,0,0,0,0,0,0,0,
           0,0,0,0,0,0,0,0,
           0,0,0,0,0,0,0,0,
           0,0,0,0,0,0,0,0,
           0,0,0,0,0,0,1,0,
           0,0,0,0,0,0,0,0]

    att = [0,0,0,0,0,0,0,0,
           0,0,0,0,0,0,0,0,
           0,0,1,0,0,0,0,0,
           0,0,0,0,0,0,0,0,
           0,0,0,0,1,0,0,0,
           0,0,0,0,0,1,0,0,
           0,0,0,0,0,0,0,0,
           0,0,0,0,0,0,0,0]

    edg = [0,0,0,0,0,0,0,0,
           0,1,0,0,0,0,0,0,
           0,0,0,0,0,0,0,0,
           0,0,0,0,0,0,0,0,
           0,0,0,0,0,0,0,0,
           0,0,0,0,0,0,0,0,
           0,0,0,0,0,0,1,0,
           0,0,0,0,0,0,0,0]
    occ_uint = Bobby.cvt_to_uint(BitArray(occ))
    ui = Bobby.INT2UINT[28]
    m, e = Bobby.slide_diagonal(occ_uint, Bobby.DIAGONALS[1], ui)
    @test all(Int.(Bobby.cvt_to_bitarray(m)) .== att)
    @test all(Int.(Bobby.cvt_to_bitarray(e)) .== edg)

    occ = [0,0,0,0,0,0,0,0,
           0,0,0,0,0,0,1,0,
           0,0,0,0,0,0,0,0,
           0,0,0,0,0,0,0,0,
           0,0,0,0,0,0,0,0,
           0,0,0,0,0,0,0,0,
           0,1,0,0,0,0,0,0,
           0,0,0,0,0,0,0,0]

    att = [0,0,0,0,0,0,0,0,
           0,0,0,0,0,0,0,0,
           0,0,0,0,0,1,0,0,
           0,0,0,0,0,0,0,0,
           0,0,0,1,0,0,0,0,
           0,0,1,0,0,0,0,0,
           0,0,0,0,0,0,0,0,
           0,0,0,0,0,0,0,0]

    edg = [0,0,0,0,0,0,0,0,
           0,0,0,0,0,0,1,0,
           0,0,0,0,0,0,0,0,
           0,0,0,0,0,0,0,0,
           0,0,0,0,0,0,0,0,
           0,0,0,0,0,0,0,0,
           0,1,0,0,0,0,0,0,
           0,0,0,0,0,0,0,0]
    occ_uint = Bobby.cvt_to_uint(BitArray(occ))
    ui = Bobby.INT2UINT[29]
    m, e = Bobby.slide_diagonal(occ_uint, Bobby.ANTIDIAGONALS[1], ui, "NE")
    @test all(Int.(Bobby.cvt_to_bitarray(m)) .== att)
    @test all(Int.(Bobby.cvt_to_bitarray(e)) .== edg)

    occ = [0,0,0,0,0,0,0,0,
           0,0,1,0,0,0,1,0,
           0,0,0,0,0,0,0,0,
           0,0,0,0,0,0,0,0,
           0,0,0,0,0,0,0,0,
           0,0,0,0,0,0,1,0,
           0,1,0,0,0,0,0,0,
           0,0,0,0,0,0,0,0]

    att = [0,0,0,0,0,0,0,0,
           0,0,0,0,0,0,0,0,
           0,0,0,0,0,1,0,0,
           0,0,0,0,0,0,0,0,
           0,0,0,1,0,0,0,0,
           0,0,1,0,0,0,0,0,
           0,0,0,0,0,0,0,0,
           0,0,0,0,0,0,0,0]

    edg = [0,0,0,0,0,0,0,0,
           0,0,0,0,0,0,1,0,
           0,0,0,0,0,0,0,0,
           0,0,0,0,0,0,0,0,
           0,0,0,0,0,0,0,0,
           0,0,0,0,0,0,0,0,
           0,1,0,0,0,0,0,0,
           0,0,0,0,0,0,0,0]
    occ_uint = Bobby.cvt_to_uint(BitArray(occ))
    ui = Bobby.INT2UINT[29]
    m, e = Bobby.antidiagonal_attack(occ_uint, ui)
    @test all(Int.(Bobby.cvt_to_bitarray(m)) .== att)
    @test all(Int.(Bobby.cvt_to_bitarray(e)) .== edg)

    occ = [0,0,0,0,0,0,0,0,
           0,0,1,0,0,0,1,0,
           0,0,0,0,0,0,0,0,
           0,0,0,0,0,0,0,0,
           0,0,0,0,0,0,0,0,
           0,0,0,0,0,0,1,0,
           0,1,0,0,0,0,0,0,
           0,0,0,0,0,0,0,0]

    att = [0,0,0,0,0,0,0,0,
           0,0,0,0,0,0,0,0,
           0,0,0,1,0,0,0,0,
           0,0,0,0,0,0,0,0,
           0,0,0,0,0,1,0,0,
           0,0,0,0,0,0,0,0,
           0,0,0,0,0,0,0,0,
           0,0,0,0,0,0,0,0]

    edg = [0,0,0,0,0,0,0,0,
           0,0,1,0,0,0,0,0,
           0,0,0,0,0,0,0,0,
           0,0,0,0,0,0,0,0,
           0,0,0,0,0,0,0,0,
           0,0,0,0,0,0,1,0,
           0,0,0,0,0,0,0,0,
           0,0,0,0,0,0,0,0]
    occ_uint = Bobby.cvt_to_uint(BitArray(occ))
    ui = Bobby.INT2UINT[29]
    m, e = Bobby.diagonal_attack(occ_uint, ui)
    @test all(Int.(Bobby.cvt_to_bitarray(m)) .== att)
    @test all(Int.(Bobby.cvt_to_bitarray(e)) .== edg)

    occ = [0,0,0,0,0,0,0,0,
           0,0,1,0,0,0,1,0,
           0,0,0,0,0,0,0,0,
           0,0,0,0,0,0,0,0,
           0,0,0,0,0,0,0,0,
           0,0,0,0,0,0,1,0,
           0,1,0,0,0,0,0,0,
           0,0,0,0,0,0,0,0]

    att = [0,0,0,0,0,0,0,0,
           0,0,0,0,0,0,0,0,
           0,0,0,1,0,1,0,0,
           0,0,0,0,0,0,0,0,
           0,0,0,1,0,1,0,0,
           0,0,1,0,0,0,0,0,
           0,0,0,0,0,0,0,0,
           0,0,0,0,0,0,0,0]

    edg = [0,0,0,0,0,0,0,0,
           0,0,1,0,0,0,1,0,
           0,0,0,0,0,0,0,0,
           0,0,0,0,0,0,0,0,
           0,0,0,0,0,0,0,0,
           0,0,0,0,0,0,1,0,
           0,1,0,0,0,0,0,0,
           0,0,0,0,0,0,0,0]
    occ_uint = Bobby.cvt_to_uint(BitArray(occ))
    ui = Bobby.INT2UINT[29]
    m, e = Bobby.cross_attack(occ_uint, ui)
    @test all(Int.(Bobby.cvt_to_bitarray(m)) .== att)
    @test all(Int.(Bobby.cvt_to_bitarray(e)) .== edg)

    occ = [0,0,0,0,0,0,0,0,
           0,0,1,0,0,0,1,0,
           0,0,0,0,0,0,0,0,
           0,0,0,0,0,0,0,0,
           0,0,0,0,0,0,0,0,
           0,0,0,0,0,0,1,0,
           0,1,0,0,0,0,0,0,
           0,0,0,0,0,0,0,0]

    att = [0,0,0,0,0,0,0,0,
           0,0,0,0,1,0,0,0,
           0,0,0,1,1,1,0,0,
           0,1,1,1,0,1,1,0,
           0,0,0,1,1,1,0,0,
           0,0,1,0,1,0,0,0,
           0,0,0,0,1,0,0,0,
           0,0,0,0,0,0,0,0]

    edg = [0,0,0,0,1,0,0,0,
           0,0,1,0,0,0,1,0,
           0,0,0,0,0,0,0,0,
           1,0,0,0,0,0,0,1,
           0,0,0,0,0,0,0,0,
           0,0,0,0,0,0,1,0,
           0,1,0,0,0,0,0,0,
           0,0,0,0,1,0,0,0]
    occ_uint = Bobby.cvt_to_uint(BitArray(occ))
    ui = Bobby.INT2UINT[29]
    m, e = Bobby.star_attack(occ_uint, ui)
    @test all(Int.(Bobby.cvt_to_bitarray(m)) .== att)
    @test all(Int.(Bobby.cvt_to_bitarray(e)) .== edg)
end